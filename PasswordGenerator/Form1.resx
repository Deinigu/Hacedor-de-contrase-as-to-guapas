<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uV2MpDmG2oxnBaB4mW6G4smgDKuJ/9k=
</value>
  </data>
</root>